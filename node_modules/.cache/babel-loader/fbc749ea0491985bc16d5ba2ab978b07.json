{"ast":null,"code":"import _classCallCheck from\"/Users/jeremyduncan/repos/React Apps/deployment/inputs-jeremy/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/jeremyduncan/repos/React Apps/deployment/inputs-jeremy/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/jeremyduncan/repos/React Apps/deployment/inputs-jeremy/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/jeremyduncan/repos/React Apps/deployment/inputs-jeremy/node_modules/@babel/runtime/helpers/esm/createSuper.js\";// Challenge: Listening Robot\n// Active Listening Robot Challenge\n// As a user, I can see a page with a text input.\n// As a developer, I have one parent component that holds state (logic or smart component).\n// As a developer, I have an input in my parent component.\n// As a user, I see titles of three robots waiting for my text.\n// As a developer, I have three child components that do not hold state (display or dumb component).\n// As a user, when I enter text I see the three robots responses update in real time.\n// As a developer, I can call an onChange method on the input tag.\n// As a developer, I can pass the updated state as props to the child components.\n// As a developer, I can see the child components display the user input.\n// As a user, I see my \"Good Robot\" repeating exactly what I type.\n// As a user, I see my \"Bad Robot\" saying BLABLA.... One character for every character I type.\n// As a developer, I can create modification to the user input text by creating a method in my child component.\n// As a user, I see a third robot that is the developer's choice.\nimport'./App.css';import React,{Component}from'react';import GoodRobot from'./components/GoodRobot';import BadRobot from'./components/BadRobot';import KanyeRobot from'./components/KanyeRobot';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.handleChange=function(e){console.log(e.target.value);_this.setState({userInput:e.target.value});};_this.state={userInput:\"awesome\"};return _this;}_createClass(App,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"strong\",{children:\"Say Something to the robots...\"})}),/*#__PURE__*/_jsx(\"input\",{className:\"text-box\",type:\"text\",value:this.state.userInput,onChange:this.handleChange})]}),/*#__PURE__*/_jsx(GoodRobot,{userInput:this.state.userInput}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(BadRobot,{userInput:this.state.userInput}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(KanyeRobot,{userInput:this.state.userInput})]});}}]);return App;}(Component);export default App;","map":{"version":3,"names":["React","Component","GoodRobot","BadRobot","KanyeRobot","App","props","handleChange","e","console","log","target","value","setState","userInput","state"],"sources":["/Users/jeremyduncan/repos/React Apps/deployment/inputs-jeremy/src/App.js"],"sourcesContent":["// Challenge: Listening Robot\n// Active Listening Robot Challenge\n\n// As a user, I can see a page with a text input.\n// As a developer, I have one parent component that holds state (logic or smart component).\n// As a developer, I have an input in my parent component.\n// As a user, I see titles of three robots waiting for my text.\n// As a developer, I have three child components that do not hold state (display or dumb component).\n// As a user, when I enter text I see the three robots responses update in real time.\n// As a developer, I can call an onChange method on the input tag.\n// As a developer, I can pass the updated state as props to the child components.\n// As a developer, I can see the child components display the user input.\n// As a user, I see my \"Good Robot\" repeating exactly what I type.\n// As a user, I see my \"Bad Robot\" saying BLABLA.... One character for every character I type.\n// As a developer, I can create modification to the user input text by creating a method in my child component.\n// As a user, I see a third robot that is the developer's choice.\n\n\nimport './App.css';\nimport React, { Component } from 'react'\nimport GoodRobot from './components/GoodRobot'\nimport BadRobot from './components/BadRobot'\nimport KanyeRobot from './components/KanyeRobot'\n\nclass App extends Component {\n  constructor(props) {\n    super(props) \n    this.state = {\n      userInput: \"awesome\"\n    }\n  }\n\n  handleChange = (e) => {\n    console.log(e.target.value)\n    this.setState({userInput: e.target.value})\n  }\n\n  render(){\n    return(\n      <div className=\"App\">\n        \n          {/*// User input box*/}\n          <div>\n            <p><strong>Say Something to the robots...</strong></p>\n            <input className=\"text-box\" type=\"text\" value={this.state.userInput} onChange={this.handleChange}/>\n          </div>\n          <GoodRobot userInput={this.state.userInput}/>\n          <br/>\n          <BadRobot userInput={this.state.userInput}/>\n          <br/>\n          <KanyeRobot userInput={this.state.userInput}/>\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n"],"mappings":"4jBAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,MAAO,WAAP,CACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CACA,MAAOC,CAAAA,QAAP,KAAqB,uBAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,C,2FAEMC,CAAAA,G,0FACJ,aAAYC,KAAZ,CAAmB,qCACjB,uBAAMA,KAAN,EADiB,MAOnBC,YAPmB,CAOJ,SAACC,CAAD,CAAO,CACpBC,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,KAArB,EACA,MAAKC,QAAL,CAAc,CAACC,SAAS,CAAEN,CAAC,CAACG,MAAF,CAASC,KAArB,CAAd,EACD,CAVkB,CAEjB,MAAKG,KAAL,CAAa,CACXD,SAAS,CAAE,SADA,CAAb,CAFiB,aAKlB,C,sCAOD,iBAAQ,CACN,mBACE,aAAK,SAAS,CAAC,KAAf,wBAGI,oCACE,gCAAG,0DAAH,EADF,cAEE,cAAO,SAAS,CAAC,UAAjB,CAA4B,IAAI,CAAC,MAAjC,CAAwC,KAAK,CAAE,KAAKC,KAAL,CAAWD,SAA1D,CAAqE,QAAQ,CAAE,KAAKP,YAApF,EAFF,GAHJ,cAOI,KAAC,SAAD,EAAW,SAAS,CAAE,KAAKQ,KAAL,CAAWD,SAAjC,EAPJ,cAQI,aARJ,cASI,KAAC,QAAD,EAAU,SAAS,CAAE,KAAKC,KAAL,CAAWD,SAAhC,EATJ,cAUI,aAVJ,cAWI,KAAC,UAAD,EAAY,SAAS,CAAE,KAAKC,KAAL,CAAWD,SAAlC,EAXJ,GADF,CAgBD,C,iBA9Beb,S,EAiClB,cAAeI,CAAAA,GAAf"},"metadata":{},"sourceType":"module"}