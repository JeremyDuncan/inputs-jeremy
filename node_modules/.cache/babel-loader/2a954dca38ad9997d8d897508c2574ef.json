{"ast":null,"code":"var _jsxFileName = \"/Users/jeremyduncan/repos/LearnAcademy/javascript-practice/react-challenges/inputs-jeremy/src/App.js\";\n// Challenge: Listening Robot\n// Active Listening Robot Challenge\n// As a user, I can see a page with a text input.\n// As a developer, I have one parent component that holds state (logic or smart component).\n// As a developer, I have an input in my parent component.\n// As a user, I see titles of three robots waiting for my text.\n// As a developer, I have three child components that do not hold state (display or dumb component).\n// As a user, when I enter text I see the three robots responses update in real time.\n// As a developer, I can call an onChange method on the input tag.\n// As a developer, I can pass the updated state as props to the child components.\n// As a developer, I can see the child components display the user input.\n// As a user, I see my \"Good Robot\" repeating exactly what I type.\n// As a user, I see my \"Bad Robot\" saying BLABLA.... One character for every character I type.\n// As a developer, I can create modification to the user input text by creating a method in my child component.\n// As a user, I see a third robot that is the developer's choice.\nimport './App.css';\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userInput: \"state data\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Component","App","constructor","props","state","userInput","render"],"sources":["/Users/jeremyduncan/repos/LearnAcademy/javascript-practice/react-challenges/inputs-jeremy/src/App.js"],"sourcesContent":["// Challenge: Listening Robot\n// Active Listening Robot Challenge\n\n    // As a user, I can see a page with a text input.\n// As a developer, I have one parent component that holds state (logic or smart component).\n// As a developer, I have an input in my parent component.\n// As a user, I see titles of three robots waiting for my text.\n// As a developer, I have three child components that do not hold state (display or dumb component).\n// As a user, when I enter text I see the three robots responses update in real time.\n// As a developer, I can call an onChange method on the input tag.\n// As a developer, I can pass the updated state as props to the child components.\n// As a developer, I can see the child components display the user input.\n// As a user, I see my \"Good Robot\" repeating exactly what I type.\n// As a user, I see my \"Bad Robot\" saying BLABLA.... One character for every character I type.\n// As a developer, I can create modification to the user input text by creating a method in my child component.\n// As a user, I see a third robot that is the developer's choice.\n\n\nimport './App.css';\nimport React, { Component } from 'react'\n\nclass App extends Component {\n  constructor(props) {\n    super(props) \n    this.state = {\n      userInput: \"state data\"\n    }\n  }\n\n  render(){\n    return(\n      <div>\n        <input type=\"text\"/>\n    \n      </div>\n    )\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA;AACA;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;EAC1BE,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACXC,SAAS,EAAE;IADA,CAAb;EAGD;;EAEDC,MAAM,GAAE;IACN,oBACE;MAAA,uBACE;QAAO,IAAI,EAAC;MAAZ;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAMD;;AAfyB;;AAkB5B,eAAeL,GAAf"},"metadata":{},"sourceType":"module"}